from flask import Flask, jsonify
from phemex.client import Client
from phemex.exceptions import PhemexAPIException

app = Flask(__name__)

# Create a testnet client
client = Client("api_key", "api_secret", True)

@app.route('/account_and_positions/<currency>')
def account_and_positions(currency):
    try:
        r = client.query_account_n_positions(currency)
        return jsonify(r)
    except PhemexAPIException as e:
        return jsonify(str(e))

@app.route('/place_order', methods=["POST"])
def place_order():
    data = request.get_json()
    try:
        r = client.place_order({
            "symbol":Client.SYMBOL_BTCUSD, 
            "clOrdID":"JackTest1" + str(time.time()), 
            "side":Client.SIDE_BUY, 
            "orderQty": data["orderQty"], 
            "priceEp": data["priceEp"],
            "ordType":Client.ORDER_TYPE_LIMIT,
            "timeInForce" : Client.TIF_GOOD_TILL_CANCEL})
        return jsonify(r)
    except PhemexAPIException as e:
        return jsonify(str(e))

@app.route('/amend_order/<order_id>', methods=["POST"])
def amend_order(order_id):
    data = request.get_json()
    try:
        r = client.amend_order(
            Client.SYMBOL_BTCUSD,
            order_id,
            {"priceEp": data["priceEp"]})
        return jsonify(r)
    except PhemexAPIException as e:
        return jsonify(str(e))

@app.route('/cancel_order/<order_id>')
def cancel_order(order_id):
    try:
        r = client.cancel_order(
            Client.SYMBOL_BTCUSD,
            order_id)
        return jsonify(r)
    except PhemexAPIException as e:
        return jsonify(str(e))

@app.route('/leverage/<leverage>')
def leverage(leverage):
    try:
        r = client.change_leverage(Client.SYMBOL_BTCUSD, leverage)
        return jsonify(r)
    except PhemexAPIException as e:
        return jsonify(str(e))

@app.route('/risklimit/<risklimit>')
def risklimit(risklimit):
    try:
        r = client.change_risklimit(Client.SYMBOL_BTCUSD, risklimit)
        return jsonify(r)
    except PhemexAPIException as e:
        return jsonify(str(e))
        
@app.route('/open_orders')
def open_orders():
    try:
    r = client.query_open_orders(Client.SYMBOL_BTCUSD)
return jsonify(r)

@app.route('/24h_ticker')
def ticker():
try:
ticker = client.query_24h_ticker("BTCUSD")
return jsonify(ticker)
except PhemexAPIException as e:
return jsonify(error=str(e))

if name == 'main':
app.run()
