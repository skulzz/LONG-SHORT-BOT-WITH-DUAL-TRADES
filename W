//@version=4
strategy(title="MACD", shorttitle="MACD")
// Getting inputs
fast_length = input(title="Fast Length", type=input.integer, defval=12)
slow_length = input(title="Slow Length", type=input.integer, defval=26)
src = input(title="Source", type=input.source, defval=close)
signal_length = input(title="Signal Smoothing", type=input.integer, minval = 1, maxval = 50, defval = 9)
sma_source = input(title="Simple MA(Oscillator)", type=input.bool, defval=false)
sma_signal = input(title="Simple MA(Signal Line)", type=input.bool, defval=false)
// Plot colors
col_grow_above = #26A69A
col_grow_below = #FFCDD2
col_fall_above = #B2DFDB
col_fall_below = #EF5350
col_macd = #0094ff
col_signal = #ff6a00
// Calculating
fast_ma = sma_source ? sma(src, fast_length) : ema(src, fast_length)
slow_ma = sma_source ? sma(src, slow_length) : ema(src, slow_length)
macd = fast_ma - slow_ma
signal = sma_signal ? sma(macd, signal_length) : ema(macd, signal_length)
hist = macd - signal
plot(hist, title="Histogram", style=plot.style_columns, color=(hist>=0 ? (hist[1] < hist ? col_grow_above : col_fall_above) : (hist[1] < hist ? col_grow_below : col_fall_below) ), transp=0 )
plot(macd, title="MACD", color=col_macd, transp=0)
plot(signal, title="Signal", color=col_signal, transp=0)

// For bot alert
// 3 - buy
// -2 - short
// 0 - close position
// 1 - ignore
plot(crossover(hist,0)?3:crossunder(hist,0)?-2:(abs(hist)<abs(hist[1]))?0:1, title="Bot", color=color.fuchsia)
bot_alert_condition = crossover(hist,0)?3:crossunder(hist,0)?-2:(abs(hist)<abs(hist[1]))?0:1

alertcondition(change(bot_alert_condition), title="Bot signal", message='STRAT{{plot("Bot")}}. {{exchange}}:{{ticker}}, price = {{close}}')
alertcondition(crossover(hist,0),title="Long", message="Buy")
alertcondition(crossunder(hist,0),title="Short", message="Sell")
alertcondition(abs(hist)<abs(hist[1]),title="Exit", message="Exit")

plotshape(crossover(hist,0), style=shape.labelup, color=color.green,  location=location.bottom, text="L", textcolor=color.white, title="LONG_ORDER")
plotshape(crossunder(hist,0), style=shape.labeldown, color=color.red,  location=location.top, text="S", textcolor=color.white, title="SHORT_ORDER")


// === INPUT BACKTEST RANGE ===
fromMonth = input(defval = 11, title = "From Month", minval = 1, maxval = 12)
fromDay = input(defval = 2, title = "From Day", minval = 1, maxval = 31)
fromYear = input(defval = 2022, title = "From Year", minval = 1970)
thruMonth = input(defval = 12, title = "Thru Month", minval = 1, maxval = 12)
thruDay = input(defval = 6, title = "Thru Day", minval = 1, maxval = 31)
thruYear = input(defval = 2112, title = "Thru Year", minval = 1970)

// === INPUT SHOW PLOT ===
showDate = input(defval = true, title = "Show Date Range")

// === FUNCTION EXAMPLE ===
start = timestamp(fromYear, fromMonth, fromDay, 9, 00) // backtest start window
finish = timestamp(thruYear, thruMonth, thruDay, 16, 30) // backtest finish window
withinWindow = time >= start and time <= finish
// Check strategy profitability
if withinWindow and (crossover(hist,0))
    strategy.entry("MacdLE", strategy.long, comment="MacdLE")
if withinWindow and (crossunder(hist,0))
    strategy.entry("MacdLE", strategy.short, comment="MacdSE")
if withinWindow and abs(hist) < abs(hist[1])
    strategy.close_all(comment="Close")


plot(strategy.equity, title="equity", color=color.red, linewidth=2, style=plot.style_areabr)
